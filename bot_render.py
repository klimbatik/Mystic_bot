import os
import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.filters import Command

# üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å Render.")

# üì¢ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª (—É–±–µ–¥–∏—Å—å, —á—Ç–æ –Ω–µ—Ç –ø—Ä–æ–±–µ–ª–æ–≤!)
CHANNEL_LINK = "https://t.me/Master_Mystic"

# üõ†Ô∏è –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()

# ‚Äî‚Äî‚Äî —Ñ—É–Ω–∫—Ü–∏—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∏—Å–ª–∞ –¥–æ 1..22 ‚Äî‚Äî‚Äî
def norm22(n: int) -> int:
    while n > 22:
        n = sum(int(digit) for digit in str(n))
    return n

# ‚Äî‚Äî‚Äî —Ä–∞—Å—á—ë—Ç –∫–∞—Ä–º–∏—á–µ—Å–∫–æ–≥–æ —Ö–≤–æ—Å—Ç–∞ ‚Äî‚Äî‚Äî
def calc_tail(day: int, month: int, year: int):
    A = norm22(day)
    B = norm22(month)
    C = norm22(sum(int(d) for d in str(year)))
    D = norm22(A + B + C)
    E = norm22(A + B + C + D)
    M = norm22(D + E)
    N = norm22(M + D)
    return (M, N, D)

# ‚Äî‚Äî‚Äî —Å–ª–æ–≤–∞—Ä—å —Ç—Ä–∞–∫—Ç–æ–≤–æ–∫ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏—Ö —Ö–≤–æ—Å—Ç–æ–≤ ‚Äî‚Äî‚Äî
TAILS = {
    (18,6,6): "–õ—é–±–æ–≤–Ω–∞—è –º–∞–≥–∏—è ‚Äî –æ–ø—ã—Ç —Å–∏–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏/–ø—Ä–∏–≤—è–∑–∫–∏.",
    (9,9,18): "–í–æ–ª—à–µ–±–Ω–∏–∫, –º–∞–≥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è ‚Äî –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–π–Ω—ã–º –∑–Ω–∞–Ω–∏—è–º.",
    (9,18,9): "–ú–∞–≥–∏—á–µ—Å–∫–∞—è –∂–µ—Ä—Ç–≤–∞ ‚Äî —Ç–µ–º–∞ –∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–¥–∏ –∏–¥–µ–∏/—Ä–∏—Ç—É–∞–ª–∞.",
    (18,9,9): "–í–æ–ª—à–µ–±–Ω–∏–∫. –û—Ç—à–µ–ª—å–Ω–∏—á–µ—Å—Ç–≤–æ ‚Äî –∏–∑–æ–ª—è—Ü–∏—è —Ä–∞–¥–∏ –∑–Ω–∞–Ω–∏–π.",
    (6,5,17): "–ì–æ—Ä–¥—ã–Ω—è ‚Äî –∏—Å–ø—ã—Ç–∞–Ω–∏–µ —Å–ª–∞–≤–æ–π –∏ —Å–∞–º–æ—Ü–µ–Ω–Ω–æ—Å—Ç—å—é.",
    (15,20,5): "–ë—É–Ω—Ç–∞—Ä—å ‚Äî —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º.",
    (15,5,8): "–ü—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, —Å—Ç—Ä–∞—Å—Ç–∏ –≤ —Å–µ–º—å–µ ‚Äî –∏—Å–ø—ã—Ç–∞–Ω–∏—è –≤ —Ä–æ–¥–µ.",
    (3,9,12): "–û–¥–∏–Ω–æ–∫–∞—è –∂–µ–Ω—â–∏–Ω–∞ ‚Äî –ø—É—Ç—å —á–µ—Ä–µ–∑ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ.",
    (3,12,9): "–û–¥–∏–Ω–æ–∫–∞—è –∂–µ–Ω—â–∏–Ω–∞ ‚Äî –ø—É—Ç—å —á–µ—Ä–µ–∑ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ.",
    (9,12,3): "–û–¥–∏–Ω–æ–∫–∞—è –∂–µ–Ω—â–∏–Ω–∞ ‚Äî –ø—É—Ç—å —á–µ—Ä–µ–∑ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ.",
    (15,8,11): "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–≥—Ä–µ—Å—Å–∏—è ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –≥–Ω–µ–≤–æ–º.",
    (9,15,6): "–ú–∏—Ä —Å—Ç—Ä–∞—Å—Ç–µ–π –∏ —Å–∫–∞–∑–æ–∫ ‚Äî —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –∏–ª–ª—é–∑–∏—è–º.",
    (6,17,11): "–ó–∞–≥—É–±–ª–µ–Ω–Ω—ã–π —Ç–∞–ª–∞–Ω—Ç ‚Äî —Å–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ –Ω–µ–¥–æ–æ—Ü–µ–Ω–∫–∞.",
    (12,19,7): "–í–æ–∏–Ω ‚Äî –±–æ—Ä—å–±–∞ –∑–∞ –ø—Ä–∞–≤–¥—É –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å.",
    (21,4,10): "–£–≥–Ω–µ—Ç—ë–Ω–Ω–∞—è –¥—É—à–∞ ‚Äî –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –±–ª–æ–∫–∏.",
    (12,16,4): "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä ‚Äî —Å–∏–ª–∞ –≤–æ–ª–∏, –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ.",
    (3,22,19): "–ù–µ —Ä–æ–∂–¥–µ–Ω–Ω–æ–µ –¥–∏—Ç—è ‚Äî –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ —É—Ç—Ä–∞—Ç—ã –∏ –ø–æ—Ç–µ—Ä–∏.",
    (21,10,16): "–î—É—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –º–∏—Å—Ç–∏–∫–æ–π.",
    (6,8,20): "–†–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–¥–∞ ‚Äî –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–∫–æ–≤.",
    (3,7,22): "–£–∑–Ω–∏–∫ ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤.",
    (9,3,21): "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏.",
    (21,7,13): "–†–∞–∑—Ä—É—à–µ–Ω–∏–µ –∏ —Å–º–µ—Ä—Ç—å –º–Ω–æ–≥–∏–º –¥—É—à–∞–º ‚Äî —Ç—è–∂–µ–ª–∞—è –∫–∞—Ä–º–∞ —Ä–æ–¥–∞.",
    (18,6,15): "–¢—ë–º–Ω—ã–π –º–∞–≥ ‚Äî —Å–∏–ª–∞ –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —ç–Ω–µ—Ä–≥–∏–µ–π.",
    (6,20,14): "–î—É—à–∞, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–Ω–µ—Å–ª–∏ –≤ –∂–µ—Ä—Ç–≤—É ‚Äî –ø—É—Ç—å —á–µ—Ä–µ–∑ –∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.",
    (21,10,7): "–í–æ–∏–Ω –≤–µ—Ä—ã ‚Äî –¥—É—Ö–æ–≤–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –∏ –≤–µ—Ä–∞.",
    (3,13,10): "–°—É–∏—Ü–∏–¥ ‚Äî —É—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–∑–∏—Å—ã –∏ –æ—Ç—á–∞—è–Ω–∏–µ.",
    (12,18,3): "–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è ‚Äî –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Ç–µ–ª–æ–º –∏ –¥—É—Ö–æ–º.",
    (18,3,12): "–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è ‚Äî –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Ç–µ–ª–æ–º –∏ –¥—É—Ö–æ–º.",
}

def describe_tail(triplet):
    return TAILS.get(triplet, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ö–≤–æ—Å—Ç ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")

# ‚Äî‚Äî‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ‚Äî‚Äî‚Äî
@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç <b>Master Mystic</b> üåø\n"
        "–Ø —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é —Ç–≤–æ–π <i>–∫–∞—Ä–º–∏—á–µ—Å–∫–∏–π —Ö–≤–æ—Å—Ç</i> –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è.\n\n"
        "üëâ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n"
        "<code>/tail –î–î.–ú–ú.–ì–ì–ì–ì</code> ‚Äî —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å."
    )

@dp.message(Command("tail"))
async def tail_command(message: Message):
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply(
            "‚ùå –£–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<code>/tail –î–î.–ú–ú.–ì–ì–ì–ì</code>"
        )
        return

    try:
        day, month, year = map(int, parts[1].split("."))
    except Exception:
        await message.reply(
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π: <code>–î–î.–ú–ú.–ì–ì–ì–ì</code>"
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç
    if not (1 <= day <= 31) or not (1 <= month <= 12) or year < 1900:
        await message.reply("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É.")
        return

    tail_triplet = calc_tail(day, month, year)
    description = describe_tail(tail_triplet)

    await message.answer(
        f"üîÆ <b>–¢–≤–æ–π –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–π —Ö–≤–æ—Å—Ç:</b> {tail_triplet[0]}-{tail_triplet[1]}-{tail_triplet[2]}\n"
        f"üìå {description}\n\n"
        f"üëâ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π:\n"
        f"<a href='{CHANNEL_LINK}'>Master Mystic</a>"
    )

# ‚Äî‚Äî‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ‚Äî‚Äî‚Äî
if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
    asyncio.run(dp.start_polling(bot))
